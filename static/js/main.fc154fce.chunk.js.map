{"version":3,"sources":["containers/NotfoundPage/index.js","components/Search/index.js","components/Credentials/index.js","components/Layout/index.js","containers/App/AppRoute.js","containers/RepositoryPage/queries.js","components/Loading/index.js","containers/RepositoryPage/Repo.js","containers/RepositoryPage/Item.js","containers/RepositoryPage/List.js","containers/RepositoryPage/Dependencies.js","containers/RepositoryPage/Vulnerability.js","containers/RepositoryPage/index.js","containers/App/index.js","serviceWorker.js","containers/App/constants.js","index.js"],"names":["NotfoundPage","className","data-testid","Search","owner","name","useState","state","setState","history","useHistory","githubKeys","localStorage","getItem","librariesKeys","Form","inline","onSubmit","replace","Label","srOnly","Control","type","placeholder","value","onChange","evt","currentTarget","trim","htmlFor","Button","disabled","Credentials","github","setGithub","libraries","setLibraries","useEffect","githubKey","librariesKey","setItem","e","target","Layout","children","match","params","Navbar","bg","variant","Brand","Nav","Breadcrumb","Item","href","AppRoute","Component","component","rest","template","loginRequired","onlyRoles","render","routeProps","FETCH_REPOSITORY","gql","Loading","loading","error","Alert","graphQLErrors","map","i","message","key","Repo","repo","Media","width","height","src","avatarUrl","alt","Body","description","homepageUrl","node","librariesData","isPackageJson","vulnerablePackages","nodeLibraryData","filter","f","packageName","nodeVersion","requirements","split","nodeLibraryDataVersion","latest_release_number","outDated","isNaN","parseInt","isVulnerable","includes","style","repository","List","loadMore","filename","Card","Header","dependenciesCount","Table","hover","dependencies","nodes","dependency","packageManager","pageInfo","hasNextPage","colSpan","length","size","onClick","Dependencies","networkStatus","loadMoreDependencies","setLoadMoreDependencies","vulnerabilityAlerts","securityVulnerability","package","Row","dependencyGraphManifests","Col","id","md","NetworkStatus","fetchMore","Vulnerability","vulnerable","vulnerableManifestPath","vulnerableRequirements","vulnerableVersionRange","severity","createdAt","LIBRARIES_ACCESS_KEY","RepositoryPage","props","client","useApolloClient","link","options","headers","Accept","useQuery","notifyOnNetworkStatusChange","variables","data","refetch","setLibrariesData","packageList","a","Promise","all","fetch","then","res","json","response","Tabs","defaultActiveKey","Tab","eventKey","title","cursor","endCursor","updateQuery","previousResult","fetchMoreResult","preNode","newNodes","find","newNode","App","basename","exact","path","Boolean","window","location","hostname","GITHUB_ACCESS_KEY","ApolloClient","uri","Authorization","cache","InMemoryCache","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.fc154fce.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction NotfoundPage() {\r\n  return (\r\n    <div className=\"App\" data-testid=\"notfound-page-test-id\">\r\n      <header className=\"App-header\">\r\n        Not found page\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NotfoundPage;\r\n","import React, {useState} from 'react';\r\nimport {useHistory} from 'react-router-dom';\r\nimport {Button, Form} from 'react-bootstrap';\r\n\r\nfunction Search({owner = \"\", name = \"\"}) {\r\n  const [state, setState] = useState({owner, name});\r\n  let history = useHistory();\r\n\r\n  const githubKeys = localStorage.getItem('github-access-key');\r\n  const librariesKeys = localStorage.getItem('libraries-access-key');\r\n\r\n  if (!githubKeys || !librariesKeys) {\r\n    return (\r\n      <em className=\"white-color\">Please Provide the Keys</em>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Form inline onSubmit={() => history.replace(`/${state.owner}/${state.name}/`)}>\r\n      <Form.Label srOnly>\r\n        Owner\r\n      </Form.Label>\r\n      <Form.Control\r\n        type=\"text\"\r\n        className=\"mb-2 mr-sm-2\"\r\n        placeholder=\"Owner\"\r\n        value={state.owner}\r\n        onChange={evt => setState({...state, owner: evt.currentTarget.value.trim()})}\r\n        data-testid=\"search-form-owner-field-test-id\"\r\n      />\r\n      <Form.Label htmlFor=\"inlineFormInputGroupUsername2\" srOnly>\r\n        Repository name\r\n      </Form.Label>\r\n      <Form.Control\r\n        type=\"text\"\r\n        className=\"mb-2 mr-sm-2\"\r\n        placeholder=\"Repository name\"\r\n        value={state.name}\r\n        onChange={evt => setState({...state, name: evt.currentTarget.value.trim()})}\r\n        data-testid=\"search-form-name-field-test-id\"\r\n      />\r\n      <Button\r\n        type=\"submit\"\r\n        disabled={!state.owner || !state.name} className=\"mb-2\"\r\n        data-testid=\"search-form-submit-button-test-id\"\r\n      >\r\n        Go\r\n      </Button>\r\n    </Form>\r\n  )\r\n    ;\r\n}\r\n\r\nexport default Search;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Button, Form } from 'react-bootstrap';\r\n\r\nconst Credentials = () => {\r\n    const [github, setGithub] = useState('');\r\n    const [libraries, setLibraries] = useState('');\r\n\r\n    useEffect(() => {\r\n        const githubKey = localStorage.getItem('github-access-key') || '';\r\n        const librariesKey = localStorage.getItem('libraries-access-key') || '';\r\n\r\n        setGithub(githubKey);\r\n        setLibraries(librariesKey);\r\n    }, [])\r\n\r\n    const handleGithubChange = (e) => {\r\n        const value = e.target.value;\r\n        setGithub(value);\r\n    }\r\n    \r\n    const handleLibrariesChange = (e) => {\r\n        const value = e.target.value;\r\n        setLibraries(value);\r\n    }\r\n    \r\n    const handleSubmit = () => {\r\n        localStorage.setItem('github-access-key', github);\r\n        localStorage.setItem('libraries-access-key', libraries);        \r\n    }\r\n\r\n    return (\r\n        <Form inline onSubmit={handleSubmit}>\r\n            <Form.Control\r\n                type=\"text\"\r\n                className=\"mb-2 mr-sm-2\"\r\n                placeholder=\"Github Access Key\"\r\n                value={github}\r\n                onChange={handleGithubChange}\r\n            />\r\n\r\n            <Form.Control\r\n                type=\"text\"\r\n                className=\"mb-2 mr-sm-2\"\r\n                placeholder=\"Libraries Access Key\"\r\n                value={libraries}\r\n                onChange={handleLibrariesChange}\r\n            />\r\n            <Button\r\n                type=\"submit\"\r\n                disabled={!github || !libraries} className=\"mb-2\"\r\n            >\r\n                SET KEYS\r\n            </Button>\r\n        </Form>\r\n    )\r\n}\r\n\r\nexport default Credentials;","import React from \"react\";\r\nimport { Breadcrumb, Nav, Navbar } from \"react-bootstrap\";\r\nimport Search from \"../Search\";\r\nimport Credentials from '../Credentials';\r\n\r\nfunction Layout({ children, ...rest }) {\r\n  const { owner, name } = rest.match.params;\r\n\r\n  return (\r\n    <>\r\n      <Navbar bg=\"dark\" variant=\"dark\" data-testid=\"layout-navbar-test-id\">\r\n        <Navbar.Brand>Github GraphQL</Navbar.Brand>\r\n        <Nav className=\"mr-auto\">\r\n          <Credentials />\r\n        </Nav>\r\n        <Search owner={owner} name={name} />\r\n      </Navbar>\r\n      <div className=\"bg-light \">\r\n        <Breadcrumb>\r\n          <Breadcrumb.Item\r\n            target={\"_blank\"}\r\n            href={`https://github.com/${owner}`}\r\n          >\r\n            <i className=\"fa fa-github text-dark\"></i> {owner}\r\n          </Breadcrumb.Item>\r\n          <Breadcrumb.Item\r\n            target={\"_blank\"}\r\n            href={`https://github.com/${owner}/${name}`}\r\n          >\r\n            {name}\r\n          </Breadcrumb.Item>\r\n        </Breadcrumb>\r\n        <div className=\"container-fluid\">{children}</div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Layout;\r\n","/**\r\n *\r\n * App.js\r\n *\r\n * This component is the skeleton around the actual pages, and should only\r\n * contain code that should be seen on all pages. (e.g. navigation bar)\r\n *\r\n */\r\n\r\nimport React from 'react';\r\nimport {Route} from 'react-router-dom';\r\nimport Layout from \"../../components/Layout\";\r\n\r\nexport default function AppRoute({\r\n                                   component: Component,\r\n                                   template = 'default',\r\n                                   loginRequired,\r\n                                   onlyRoles,\r\n                                   ...rest\r\n                                 }) {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={routeProps => (\r\n        <Layout {...routeProps}>\r\n          <Component {...routeProps} />\r\n        </Layout>\r\n      )\r\n      }\r\n    />\r\n  );\r\n}\r\n","import {gql} from '@apollo/client';\r\n\r\nexport const FETCH_REPOSITORY = gql`\r\n  query ($owner: String!, $name: String!, $cursor: String){\r\n    repository(owner: $owner, name: $name) {\r\n      id\r\n      name\r\n      description\r\n      homepageUrl\r\n      owner {\r\n        avatarUrl\r\n        id\r\n        ... on Organization {\r\n          id\r\n          email\r\n          name\r\n          avatarUrl\r\n        }\r\n        ... on User {\r\n          id\r\n          email\r\n          name\r\n        }\r\n      }\r\n      vulnerabilityAlerts(last: 10) {\r\n        nodes {\r\n          id\r\n          vulnerableRequirements\r\n          vulnerableManifestPath\r\n          securityVulnerability {\r\n            package {\r\n              name\r\n              ecosystem\r\n            }\r\n            vulnerableVersionRange\r\n            severity\r\n          }\r\n          createdAt\r\n        }\r\n      }\r\n      dependencyGraphManifests{\r\n        nodes{\r\n          id\r\n          filename\r\n          dependenciesCount\r\n          dependencies(first: 5, after: $cursor){\r\n            nodes {\r\n              packageName\r\n              packageManager\r\n              hasDependencies\r\n              requirements\r\n              repository{\r\n                id\r\n                name\r\n                owner {\r\n                  avatarUrl\r\n                  id\r\n                  ... on Organization {\r\n                    id\r\n                    email\r\n                    name\r\n                    avatarUrl\r\n                  }\r\n                  ... on User {\r\n                    id\r\n                    email\r\n                    name\r\n                  }\r\n                }\r\n              }\r\n            }\r\n            pageInfo {\r\n              hasNextPage\r\n              endCursor\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;","import React from \"react\";\r\nimport { Alert } from \"react-bootstrap\";\r\n\r\nfunction Loading({ loading, error, children }) {\r\n  if (loading) {\r\n    return (\r\n      <div className=\"p-5\">\r\n        <h3 className=\"text-center\">\r\n          <i className=\"fa fa-spin fa-spinner\" data-testid=\"loading-true-test-id\"></i> Loading ...\r\n        </h3>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <div className=\"p-5\">\r\n        <Alert variant=\"danger\">\r\n          <h5>\r\n            <i className=\"fa fa-warning\"></i> Error !!!\r\n          </h5>\r\n          {error.graphQLErrors.map(({ message }, i) => (\r\n            <div key={i} data-testid=\"error-message-node-test-id\">{message}</div>\r\n          ))}\r\n        </Alert>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return <>{children}</>;\r\n}\r\n\r\nexport default Loading;\r\n","import React from \"react\";\r\nimport { Media } from \"react-bootstrap\";\r\n\r\nexport default function Repo({ repo }) {\r\n  return (\r\n    <div className=\"mb-3 pt-3 pb-4 \" data-testid=\"repo-details-test-id\">\r\n      <div className=\"container\">\r\n        <Media>\r\n          <img\r\n            width={100}\r\n            height={100}\r\n            className=\"mr-3\"\r\n            src={repo.owner.avatarUrl}\r\n            alt=\"\"\r\n            data-testid=\"repo-details-avatar-test-id\"\r\n          />\r\n          <Media.Body>\r\n            <h5 data-testid=\"repo-details-name-test-id\">{repo.name}</h5>\r\n            <p data-testid=\"repo-details-description-test-id\">\r\n              {repo.description}\r\n            </p>\r\n            <div className=\"small text-muted\">\r\n              <span className=\"mr-4\">\r\n                <i className=\"fa fa-user\"></i> {repo.owner.name}\r\n              </span>\r\n              <span>\r\n                <i className=\"fa fa-link\"></i> {repo.homepageUrl}\r\n              </span>\r\n            </div>\r\n          </Media.Body>\r\n        </Media>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function Item({\r\n  node,\r\n  librariesData,\r\n  isPackageJson,\r\n  vulnerablePackages,\r\n}) {\r\n  const nodeLibraryData = librariesData.filter(\r\n    (f) => f.name === node.packageName\r\n  )[0];\r\n  const nodeVersion = node?.requirements\r\n    ?.split(\".\")[0]\r\n    ?.replace(\"^\", \"\")\r\n    ?.trim();\r\n  const nodeLibraryDataVersion = nodeLibraryData?.latest_release_number\r\n    ?.split(\".\")[0]\r\n    ?.replace(\"^\", \"\")\r\n    ?.trim();\r\n  let outDated = \"No\";\r\n\r\n  if (!isNaN(nodeVersion) && !isNaN(nodeLibraryDataVersion)) {\r\n    outDated =\r\n      parseInt(nodeLibraryDataVersion) > parseInt(nodeVersion) ? \"Yes\" : \"No\";\r\n  }\r\n\r\n  const isVulnerable = vulnerablePackages.includes(node.packageName)\r\n    ? \"Yes\"\r\n    : \"No\";\r\n\r\n  return (\r\n    <>\r\n      <td style={{ width: \"1%\" }}>\r\n        <i className=\"fa fa-chevron-right\"></i>\r\n      </td>\r\n      <td data-testid=\"package-test-id\">\r\n        <img\r\n          className=\"d-inline mr-2 rounded-circle\"\r\n          width={20}\r\n          height={20}\r\n          src={node.repository.owner.avatarUrl}\r\n        />\r\n        <a target=\"_blank\" href={`https://github.com/${node.packageName}`}>\r\n          {node.packageName}\r\n        </a>\r\n      </td>\r\n      <td className=\"text-center\">{node.requirements}</td>\r\n      {isPackageJson && (\r\n        <td className=\"text-center\" data-testid=\"latest-release-number-test-id\">\r\n          {nodeLibraryData?.latest_release_number}\r\n        </td>\r\n      )}\r\n      {isPackageJson && (\r\n        <td className=\"text-center\" data-testid=\"outdated-test-id\">\r\n          {outDated}\r\n        </td>\r\n      )}\r\n      <td className=\"text-center\" data-testid=\"isvulnerable-test-id\">\r\n        {isVulnerable}\r\n      </td>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Button, Card, Table } from \"react-bootstrap\";\r\nimport Item from \"./Item\";\r\n\r\nexport default function List({\r\n  node,\r\n  loading,\r\n  loadMore,\r\n  librariesData,\r\n  vulnerablePackages,\r\n}) {\r\n  const isPackageJson = node.filename === \"package.json\";\r\n\r\n  return (\r\n    <Card className=\"mb-3\">\r\n      <Card.Header>\r\n        <i className=\"fa fa-cubes\"></i> Dependencies defined in{\" \"}\r\n        <b>{node.filename}</b>{\" \"}\r\n        <span className=\"badge badge-dark\">{node.dependenciesCount}</span>\r\n      </Card.Header>\r\n      <Card.Body className=\"p-0\">\r\n        <Table hover>\r\n          <thead>\r\n            <tr>\r\n              <th></th>\r\n              <th>Name</th>\r\n              <th className=\"text-center\">Current Version</th>\r\n              {isPackageJson && <th className=\"text-center\" data-testid=\"list-ispackagejson-header-test-id\">Latest Version</th>}\r\n              {isPackageJson && <th className=\"text-center\" data-testid=\"list-outdated-header-test-id\">Outdated</th>}\r\n              <th className=\"text-center\" data-testid=\"list-vulnerable-header-test-id\">Vulnerable</th>\r\n            </tr>\r\n          </thead>\r\n\r\n          <tbody>\r\n            {node.dependencies.nodes.map((dependency) => (\r\n              <tr\r\n                key={`${dependency.packageManager}/${dependency.packageName}`}\r\n                data-testid=\"list-nodes-element-test-id\"\r\n              >\r\n                <Item\r\n                  node={dependency}\r\n                  librariesData={librariesData}\r\n                  isPackageJson={isPackageJson}\r\n                  vulnerablePackages={vulnerablePackages}\r\n                />\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n\r\n          {node.dependencies.pageInfo.hasNextPage && (\r\n            <tfoot>\r\n              <tr>\r\n                <td colSpan=\"100\">\r\n                  <div className=\"text-center pt-2\">\r\n                    <div className=\"small mb-1\">\r\n                      {node.dependenciesCount - node.dependencies.nodes.length}{\" \"}\r\n                      more dependencies\r\n                    </div>\r\n                    <Button size={\"sm\"} onClick={loadMore} disabled={loading} data-testid=\"list-loadmore-button-test-id\">\r\n                      {loading ? (\r\n                        <>\r\n                          <i className=\"fa fa-spin fa-spinner\" data-testid=\"list-loadmore-button-spinner-icon-test-id\"></i> Loading ...\r\n                        </>\r\n                      ) : (\r\n                        \"Load more ...\"\r\n                      )}{\" \"}\r\n                    </Button>\r\n                  </div>\r\n                </td>\r\n              </tr>\r\n            </tfoot>\r\n          )}\r\n        </Table>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Col, Row } from \"react-bootstrap\";\r\nimport List from \"./List\";\r\nimport { NetworkStatus } from \"@apollo/client\";\r\n\r\nexport default function Dependencies({\r\n  repo,\r\n  networkStatus,\r\n  loadMore,\r\n  librariesData,\r\n}) {\r\n  const [loadMoreDependencies, setLoadMoreDependencies] = useState(\"\");\r\n  const vulnerablePackages = repo?.vulnerabilityAlerts?.nodes?.map(\r\n    (f) => f?.securityVulnerability?.package?.name\r\n  );\r\n\r\n  return (\r\n    <div className=\"py-3 bg-white\" data-testid=\"dependencies-test-id\">\r\n      <Row>\r\n        {repo.dependencyGraphManifests.nodes.map((node) => (\r\n          <Col key={node.id} md={6}>\r\n            <List\r\n              vulnerablePackages={vulnerablePackages}\r\n              librariesData={librariesData}\r\n              node={node}\r\n              loading={\r\n                networkStatus === NetworkStatus.fetchMore &&\r\n                node.filename === loadMoreDependencies\r\n              }\r\n              loadMore={() => {\r\n                setLoadMoreDependencies(node.filename);\r\n                loadMore(node);\r\n              }}\r\n            />\r\n          </Col>\r\n        ))}\r\n      </Row>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Table } from \"react-bootstrap\";\r\n\r\nexport default function Vulnerability({ repo }) {\r\n  if (repo.vulnerabilityAlerts.nodes.length < 1) {\r\n    return (\r\n      <div\r\n        className={\"text-center p-5 bg-white\"}\r\n        data-testid=\"vulnerability-no-data-test-id\"\r\n      >\r\n        No data\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"py-3 bg-white\" data-testid=\"vulnerability-test-id\">\r\n      <Table hover>\r\n        <thead>\r\n          <tr>\r\n            <th>Package</th>\r\n            <th>Requirements</th>\r\n            <th>Version Range</th>\r\n            <th></th>\r\n            <th>Created at</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {repo.vulnerabilityAlerts.nodes.map((vulnerable) => {\r\n            return (\r\n              <tr key={vulnerable.id} data-testid=\"vulnerability-alert-node-item-test-id\">\r\n                <td>\r\n                  <b>{vulnerable.securityVulnerability.package.name}</b>{\" \"}\r\n                  <small className=\"text-muted\">\r\n                    {vulnerable.vulnerableManifestPath}\r\n                  </small>\r\n                </td>\r\n                <td>{vulnerable.vulnerableRequirements}</td>\r\n                <td>\r\n                  {vulnerable.securityVulnerability.vulnerableVersionRange}\r\n                </td>\r\n                <td>\r\n                  <span className=\"badge badge-dark\">\r\n                    {vulnerable.securityVulnerability.severity}\r\n                  </span>\r\n                </td>\r\n                <td>{vulnerable.createdAt}</td>\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </Table>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { NetworkStatus, useApolloClient, useQuery } from \"@apollo/client\";\r\nimport { FETCH_REPOSITORY } from \"./queries\";\r\nimport { Alert, Tab, Tabs } from \"react-bootstrap\";\r\nimport Loading from \"../../components/Loading\";\r\nimport Repo from \"./Repo\";\r\nimport Dependencies from \"./Dependencies\";\r\nimport Vulnerability from \"./Vulnerability\";\r\n\r\nconst LIBRARIES_ACCESS_KEY = localStorage.getItem('libraries-access-key');\r\n\r\nfunction RepositoryPage(props) {\r\n  const { owner = \"\", name = \"\" } = props.match.params;\r\n  const client = useApolloClient();\r\n  client.link.options.headers.Accept =\r\n    \"application/vnd.github.hawkgirl-preview+json\";\r\n  let { loading, error, data, refetch, fetchMore, networkStatus } = useQuery(\r\n    FETCH_REPOSITORY,\r\n    {\r\n      client,\r\n      notifyOnNetworkStatusChange: true,\r\n      variables: { owner, name },\r\n    }\r\n  );\r\n\r\n  const [librariesData, setLibrariesData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    refetch({ owner, name });\r\n  }, [owner, name, refetch]);\r\n\r\n  useEffect(() => {\r\n    const packageList =\r\n      data?.repository?.dependencyGraphManifests?.nodes\r\n        ?.filter((f) => f.filename === \"package.json\")[0]\r\n        ?.dependencies?.nodes?.map((f) => f.packageName.replace(\"/\", \"%2F\")) ||\r\n      [];\r\n\r\n    (async function newFunction() {\r\n      Promise.all(\r\n        packageList.map((f) =>\r\n          fetch(\r\n            `https://libraries.io/api/NPM/${f}?api_key=${LIBRARIES_ACCESS_KEY}`\r\n          ).then((res) => res.json())\r\n        )\r\n      ).then((response) => {\r\n        setLibrariesData(response);\r\n      });\r\n    })();\r\n  }, [data]);\r\n\r\n  if (!owner || !name) {\r\n    return (\r\n      <Alert variant=\"info\" data-testid=\"repository-page-tset-id\">\r\n        Fetch repository of <b>Owner</b> and <b>Repository name</b> by the form\r\n      </Alert>\r\n    );\r\n  }\r\n  return (\r\n    <Loading\r\n      loading={\r\n        networkStatus !== NetworkStatus.fetchMore &&\r\n        (loading || networkStatus === NetworkStatus.refetch)\r\n      }\r\n      error={error}\r\n    >\r\n      {data && (\r\n        <>\r\n          <Repo repo={data.repository} />\r\n          <Tabs defaultActiveKey=\"1\" id=\"uncontrolled-tab-example\">\r\n            <Tab eventKey=\"contact\" title=\"   \" disabled></Tab>\r\n            <Tab eventKey=\"1\" title=\"Dependency Graph\">\r\n              <Dependencies\r\n                networkStatus={networkStatus}\r\n                repo={data.repository}\r\n                librariesData={librariesData}\r\n                loadMore={(node) => {\r\n                  fetchMore({\r\n                    variables: {\r\n                      cursor: node.dependencies.pageInfo.endCursor,\r\n                    },\r\n                    updateQuery: (previousResult, { fetchMoreResult }) => {\r\n                      const { repository } = previousResult;\r\n                      const nodes = repository.dependencyGraphManifests.nodes.map(\r\n                        (preNode) => {\r\n                          if (preNode.filename === node.filename) {\r\n                            const newNodes =\r\n                              fetchMoreResult.repository.dependencyGraphManifests.nodes.find(\r\n                                (newNode) => newNode.filename === node.filename\r\n                              ) || {};\r\n                            return {\r\n                              ...preNode,\r\n                              dependencies: {\r\n                                nodes: [\r\n                                  ...preNode.dependencies.nodes,\r\n                                  ...newNodes.dependencies.nodes,\r\n                                ],\r\n                                pageInfo: newNodes.dependencies.pageInfo,\r\n                              },\r\n                            };\r\n                          }\r\n                          return preNode;\r\n                        }\r\n                      );\r\n                      return {\r\n                        repository: {\r\n                          ...repository,\r\n                          dependencyGraphManifests: {\r\n                            ...repository.dependencyGraphManifests,\r\n                            nodes: nodes,\r\n                          },\r\n                        },\r\n                      };\r\n                    },\r\n                  });\r\n                }}\r\n              />\r\n            </Tab>\r\n            <Tab eventKey=\"2\" title=\"Vulnerability Alerts\">\r\n              <Vulnerability repo={data.repository} />\r\n            </Tab>\r\n          </Tabs>\r\n        </>\r\n      )}\r\n    </Loading>\r\n  );\r\n}\r\n\r\nexport default RepositoryPage;\r\n","import React from 'react';\r\nimport {BrowserRouter, Switch} from \"react-router-dom\";\r\nimport NotfoundPage from \"../NotfoundPage\";\r\nimport AppRoute from \"./AppRoute\";\r\nimport RepositoryPage from \"../RepositoryPage\";\r\n\r\nfunction App() {\r\n  return (\r\n    <BrowserRouter basename=\"github-graphql-api\">\r\n      <Switch>\r\n        <AppRoute exact path=\"/:owner?/:name?\" component={RepositoryPage}/>\r\n        <AppRoute component={NotfoundPage}/>\r\n      </Switch>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","export const API_ROOT = 'https://api.github.com/graphql';\r\nexport const GITHUB_ACCESS_KEY = '';\r\nexport const LIBRARIES_ACCESS_KEY = '';\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'font-awesome/css/font-awesome.min.css';\r\nimport './styles/index.css';\r\nimport './styles/App.css';\r\n\r\nimport App from './containers/App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {ApolloClient, ApolloProvider, InMemoryCache} from '@apollo/client';\r\nimport {API_ROOT} from \"./containers/App/constants\";\r\n\r\nconst GITHUB_ACCESS_KEY = localStorage.getItem('github-access-key');\r\n\r\nconst client = new ApolloClient({\r\n  uri: API_ROOT,\r\n  headers: {\r\n    Authorization: `bearer ${GITHUB_ACCESS_KEY}`,\r\n  },\r\n  cache: new InMemoryCache()\r\n});\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <ApolloProvider client={client}>\r\n      <App/>\r\n    </ApolloProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}