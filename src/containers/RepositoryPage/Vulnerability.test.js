import React, { useState } from 'react';
import { render } from '@testing-library/react';

import Vulnerability from './Vulnerability';
import { graphqlData } from '../../fixtures/graphQLFixtures';

describe('Vulnerabilty component', () => {
    describe('when vulnerability length', () => {
        const props = {
            repo: { ...graphqlData.data.repository, vulnerabilityAlerts: { nodes: [] } }
        }

        it('should render', () => {
            const { queryByTestId } = render(<Vulnerability { ...props } />);

            expect(queryByTestId('vulnerability-no-data-test-id')).toBeInTheDocument();
            expect(queryByTestId('vulnerability-no-data-test-id').innerHTML).toEqual('No data');
            expect(queryByTestId('vulnerability-test-id')).not.toBeInTheDocument();
        })
    })

    describe('when vulnerability length', () => {
        const props = {
            repo: graphqlData.data.repository
        }

        it('should render', () => {
            const { queryByTestId, queryAllByTestId } = render(<Vulnerability { ...props } />);

            expect(queryByTestId('vulnerability-no-data-test-id')).not.toBeInTheDocument();
            expect(queryByTestId('vulnerability-test-id')).toBeInTheDocument();
            expect(queryAllByTestId('vulnerability-alert-node-item-test-id')).toHaveLength(4);
        })
    })
})